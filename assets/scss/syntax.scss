@import url('https://fonts.googleapis.com/css?family=Fira+Mono');

$primary: #ff9800;
$link: $primary;
@import '~bulma/bulma';

ul.firebaseui-idp-list {
  list-style: none;
}
ul.is-unstyled {
  list-style: none;
  margin: 0;
  padding: 0;
}
a.navbar-item.is-active::after,
.navbar-link.is-active::after {
  content: '';
  height: 5px;
  width: 80%;
  background-color: $primary;
  position: absolute;
  bottom: 0;
  left: 15px;
  transition: 0.5s all ease-in-out;
}

body {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

.footer {
  padding: 0 2rem;
  background: linear-gradient(to right, $primary, lighten($primary, 10%));
  color: white;

  @media (max-width: 567px) {
    padding: 0 1.2rem;
  }
  a {
    color: white;
  }
}

h1 {
  margin-bottom: 2rem;
}

h2 {
  margin-bottom: 1.8rem;
}

h3 {
  margin-bottom: 1.5rem;
}

h4 {
  margin-bottom: 1rem;
}

ul {
  list-style: square;
}

code[class*='language-'],
pre[class*='language-'] {
  font-family: 'Fira Mono', Menlo, Monaco, 'Lucida Console', 'Courier New',
    Courier, monospace;
  font-size: 16px;
  line-height: 1.6;
  direction: ltr;
  text-align: left;
  word-spacing: normal;

  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
  background: #f6f8fa;
}

/* Code blocks */
pre[class*='language-'] {
  padding: 1.4rem;
  border-radius: 0.4rem;
  display: block;
  overflow-x: scroll;
  margin-bottom: 1.5rem;
}

code {
  display: inline;
  overflow-x: auto;
  background-color: #f6f8fa;
  font-size: 0.8rem;
  padding: 2px 4px;
  border-radius: 0.2rem;
}

/* Inline code */
:not(pre) > code[class*='language-'] {
  padding: 0.1em;
  border-radius: 0.3em;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #797379;
}

.namespace {
  opacity: 0.7;
}

.token.null,
.token.operator,
.token.boolean,
.token.number {
  color: #fd8b19;
}
.token.function {
  color: #ef798a;
}
.token.property {
  color: #f7ef99;
}
.token.tag {
  color: #1290bf;
}
.token.string {
  color: #79b26b;
}
.token.selector {
  color: #c85e7c;
}
.token.attr-name {
  color: #fd8b19;
}
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #149b93;
}

.token.attr-value,
.token.keyword,
.token.control,
.token.directive,
.token.unit {
  color: #2274a5;
}

.token.statement,
.token.regex,
.token.atrule {
  color: #149b93;
}

.token.placeholder,
.token.variable {
  color: #1290bf;
}

.token.important {
  color: #dd464c;
  font-weight: bold;
}

.token.entity {
  cursor: help;
}

pre > code.highlight {
  outline: 0.4em solid red;
  outline-offset: 0.4em;
}

.icon.icon-link {
  background-image: url('~assets/svg/icon-hashtag.svg');
  display: inline-block;
  width: 20px;
  height: 20px;
  background-size: 20px 20px;
}
